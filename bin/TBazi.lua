--- LUA八字库
local TBazi = {}

-- 新历历法
local ctInvalid     = 1 --非法
local ctJulian      = 2 --儒略
local ctGregorian   = 3 --格利高里

-- 立春数据
local LI_CHUN_LIST = {
    {2, 4, 13, 51, 31}, -- 1900
    {2, 4, 19, 39, 52}, -- 1901
    {2, 5, 1, 38, 10}, -- 1902
    {2, 5, 7, 31, 17}, -- 1903
    {2, 5, 13, 24, 7}, -- 1904
    {2, 4, 19, 15, 49}, -- 1905
    {2, 5, 1, 3, 54}, -- 1906
    {2, 5, 6, 58, 49}, -- 1907
    {2, 5, 12, 47, 13}, -- 1908
    {2, 4, 18, 32, 31}, -- 1909
    {2, 5, 0, 27, 22}, -- 1910
    {2, 5, 6, 10, 16}, -- 1911
    {2, 5, 11, 53, 31}, -- 1912
    {2, 4, 17, 42, 38}, -- 1913
    {2, 4, 23, 29, 16}, -- 1914
    {2, 5, 5, 25, 26}, -- 1915
    {2, 5, 11, 13, 58}, -- 1916
    {2, 4, 16, 57, 32}, -- 1917
    {2, 4, 22, 53, 5}, -- 1918
    {2, 5, 4, 39, 23}, -- 1919
    {2, 5, 10, 26, 26}, -- 1920
    {2, 4, 16, 20, 12}, -- 1921
    {2, 4, 22, 6, 24}, -- 1922
    {2, 5, 4, 0, 17}, -- 1923
    {2, 5, 9, 49, 32}, -- 1924
    {2, 4, 15, 36, 45}, -- 1925
    {2, 4, 21, 38, 16}, -- 1926
    {2, 5, 3, 30, 2}, -- 1927
    {2, 5, 9, 16, 22}, -- 1928
    {2, 4, 15, 8, 43}, -- 1929
    {2, 4, 20, 51, 7}, -- 1930
    {2, 5, 2, 40, 38}, -- 1931
    {2, 5, 8, 29, 20}, -- 1932
    {2, 4, 14, 9, 16}, -- 1933
    {2, 4, 20, 3, 37}, -- 1934
    {2, 5, 1, 48, 41}, -- 1935
    {2, 5, 7, 29, 16}, -- 1936
    {2, 4, 13, 25, 33}, -- 1937
    {2, 4, 19, 14, 58}, -- 1938
    {2, 5, 1, 10, 26}, -- 1939
    {2, 5, 7, 7, 32}, -- 1940
    {2, 4, 12, 49, 44}, -- 1941
    {2, 4, 18, 48, 34}, -- 1942
    {2, 5, 0, 40, 4}, -- 1943
    {2, 5, 6, 22, 55}, -- 1944
    {2, 4, 12, 19, 22}, -- 1945
    {2, 4, 18, 3, 53}, -- 1946
    {2, 4, 23, 50, 21}, -- 1947
    {2, 5, 5, 42, 0}, -- 1948
    {2, 4, 11, 22, 49}, -- 1949
    {2, 4, 17, 20, 46}, -- 1950
    {2, 4, 23, 13, 26}, -- 1951
    {2, 5, 4, 52, 54}, -- 1952
    {2, 4, 10, 45, 53}, -- 1953
    {2, 4, 16, 30, 41}, -- 1954
    {2, 4, 22, 17, 36}, -- 1955
    {2, 5, 4, 11, 55}, -- 1956
    {2, 4, 9, 54, 37}, -- 1957
    {2, 4, 15, 49, 11}, -- 1958
    {2, 4, 21, 42, 10}, -- 1959
    {2, 5, 3, 23, 9}, -- 1960
    {2, 4, 9, 22, 26}, -- 1961
    {2, 4, 15, 17, 20}, -- 1962
    {2, 4, 21, 7, 44}, -- 1963
    {2, 5, 3, 4, 55}, -- 1964
    {2, 4, 8, 46, 6}, -- 1965
    {2, 4, 14, 37, 48}, -- 1966
    {2, 4, 20, 30, 49}, -- 1967
    {2, 5, 2, 7, 23}, -- 1968
    {2, 4, 7, 58, 52}, -- 1969
    {2, 4, 13, 45, 42}, -- 1970
    {2, 4, 19, 25, 25}, -- 1971
    {2, 5, 1, 20, 13}, -- 1972
    {2, 4, 7, 4, 12}, -- 1973
    {2, 4, 13, 0, 5}, -- 1974
    {2, 4, 18, 59, 12}, -- 1975
    {2, 5, 0, 39, 28}, -- 1976
    {2, 4, 6, 33, 25}, -- 1977
    {2, 4, 12, 26, 57}, -- 1978
    {2, 4, 18, 12, 18}, -- 1979
    {2, 5, 0, 9, 28}, -- 1980
    {2, 4, 5, 55, 23}, -- 1981
    {2, 4, 11, 45, 28}, -- 1982
    {2, 4, 17, 39, 42}, -- 1983
    {2, 4, 23, 18, 44}, -- 1984
    {2, 4, 5, 11, 47}, -- 1985
    {2, 4, 11, 7, 42}, -- 1986
    {2, 4, 16, 51, 40}, -- 1987
    {2, 4, 22, 42, 49}, -- 1988
    {2, 4, 4, 27, 9}, -- 1989
    {2, 4, 10, 14, 0}, -- 1990
    {2, 4, 16, 8, 24}, -- 1991
    {2, 4, 21, 48, 17}, -- 1992
    {2, 4, 3, 37, 9}, -- 1993
    {2, 4, 9, 30, 56}, -- 1994
    {2, 4, 15, 12, 51}, -- 1995
    {2, 4, 21, 7, 54}, -- 1996
    {2, 4, 3, 1, 57}, -- 1997
    {2, 4, 8, 56, 52}, -- 1998
    {2, 4, 14, 57, 3}, -- 1999
    {2, 4, 20, 40, 24}, -- 2000
    {2, 4, 2, 28, 49}, -- 2001
    {2, 4, 8, 24, 5}, -- 2002
    {2, 4, 14, 5, 20}, -- 2003
    {2, 4, 19, 56, 13}, -- 2004
    {2, 4, 1, 43, 2}, -- 2005
    {2, 4, 7, 27, 16}, -- 2006
    {2, 4, 13, 18, 12}, -- 2007
    {2, 4, 19, 0, 24}, -- 2008
    {2, 4, 0, 49, 47}, -- 2009
    {2, 4, 6, 47, 51}, -- 2010
    {2, 4, 12, 32, 56}, -- 2011
    {2, 4, 18, 22, 23}, -- 2012
    {2, 4, 0, 13, 25}, -- 2013
    {2, 4, 6, 3, 15}, -- 2014
    {2, 4, 11, 58, 27}, -- 2015
    {2, 4, 17, 46, 0}, -- 2016
    {2, 3, 23, 34, 1}, -- 2017
    {2, 4, 5, 28, 25}, -- 2018
    {2, 4, 11, 14, 14}, -- 2019
    {2, 4, 17, 3, 12}, -- 2020
    {2, 3, 22, 58, 39}, -- 2021
    {2, 4, 4, 50, 36}, -- 2022
    {2, 4, 10, 42, 21}, -- 2023
    {2, 4, 16, 26, 53}, -- 2024
    {2, 3, 22, 10, 13}, -- 2025
    {2, 4, 4, 1, 51}, -- 2026
    {2, 4, 9, 46, 0}, -- 2027
    {2, 4, 15, 30, 53}, -- 2028
    {2, 3, 21, 20, 25}, -- 2029
    {2, 4, 3, 8, 4}, -- 2030
    {2, 4, 8, 57, 55}, -- 2031
    {2, 4, 14, 48, 32}, -- 2032
    {2, 3, 20, 41, 8}, -- 2033
    {2, 4, 2, 40, 41}, -- 2034
    {2, 4, 8, 31, 4}, -- 2035
    {2, 4, 14, 19, 25}, -- 2036
    {2, 3, 20, 11, 4}, -- 2037
    {2, 4, 2, 3, 12}, -- 2038
    {2, 4, 7, 52, 19}, -- 2039
    {2, 4, 13, 39, 17}, -- 2040
    {2, 3, 19, 24, 30}, -- 2041
    {2, 4, 1, 12, 11}, -- 2042
    {2, 4, 6, 58, 5}, -- 2043
    {2, 4, 12, 43, 36}, -- 2044
    {2, 3, 18, 35, 35}, -- 2045
    {2, 4, 0, 30, 22}, -- 2046
    {2, 4, 6, 17, 17}, -- 2047
    {2, 4, 12, 3, 52}, -- 2048
    {2, 3, 17, 52, 36}, -- 2049
    {2, 3, 23, 43, 0}, -- 2050
    {2, 4, 5, 35, 20}, -- 2051
    {2, 4, 11, 22, 11}, -- 2052
    {2, 3, 17, 12, 16}, -- 2053
    {2, 3, 23, 7, 9}, -- 2054
    {2, 4, 4, 55, 2}, -- 2055
    {2, 4, 10, 46, 23}, -- 2056
    {2, 3, 16, 41, 44}, -- 2057
    {2, 3, 22, 33, 44}, -- 2058
    {2, 4, 4, 23, 11}, -- 2059
    {2, 4, 10, 7, 24}, -- 2060
    {2, 3, 15, 52, 57}, -- 2061
    {2, 3, 21, 46, 16}, -- 2062
    {2, 4, 3, 30, 24}, -- 2063
    {2, 4, 9, 14, 4}, -- 2064
    {2, 3, 15, 2, 53}, -- 2065
    {2, 3, 20, 48, 35}, -- 2066
    {2, 4, 2, 36, 34}, -- 2067
    {2, 4, 8, 28, 16}, -- 2068
    {2, 3, 14, 20, 4}, -- 2069
    {2, 3, 20, 21, 3}, -- 2070
    {2, 4, 2, 10, 5}, -- 2071
    {2, 4, 7, 56, 15}, -- 2072
    {2, 3, 13, 52, 0}, -- 2073
    {2, 3, 19, 40, 32}, -- 2074
    {2, 4, 1, 29, 52}, -- 2075
    {2, 4, 7, 19, 9}, -- 2076
    {2, 3, 13, 2, 24}, -- 2077
    {2, 3, 18, 56, 39}, -- 2078
    {2, 4, 0, 42, 30}, -- 2079
    {2, 4, 6, 27, 16}, -- 2080
    {2, 3, 12, 25, 15}, -- 2081
    {2, 3, 18, 11, 32}, -- 2082
    {2, 3, 23, 57, 43}, -- 2083
    {2, 4, 5, 45, 58}, -- 2084
    {2, 3, 11, 29, 14}, -- 2085
    {2, 3, 17, 25, 48}, -- 2086
    {2, 3, 23, 14, 34}, -- 2087
    {2, 4, 4, 57, 31}, -- 2088
    {2, 3, 10, 54, 2}, -- 2089
    {2, 3, 16, 41, 40}, -- 2090
    {2, 3, 22, 30, 13}, -- 2091
    {2, 4, 4, 28, 13}, -- 2092
    {2, 3, 10, 18, 0}, -- 2093
    {2, 3, 16, 16, 28}, -- 2094
    {2, 3, 22, 6, 29}, -- 2095
    {2, 4, 3, 46, 18}, -- 2096
    {2, 3, 9, 41, 26}, -- 2097
    {2, 3, 15, 28, 27}, -- 2098
    {2, 3, 21, 8, 57}, -- 2099
    {2, 4, 2, 59, 45}, -- 2100
}

-- 从新历获取八字(年, 月, 日, 时, 分, 秒, 性别男1,女0)
function TBazi:GetBazi(data)
    local nYear = data.nYear or 0;
    local nMonth = data.nMonth or 0;
    local nDay = data.nDay or 0;
    local nHour = data.nHour or 0;
    local nMinute = data.nMinute or 0;
    local nSecond = data.nSecond or 0;
    local nSex = data.nSex or 0;

    if not self:GetDateIsValid(nYear, nMonth, nDay) then
        dump(data, "无效的日期")
        error("无效的日期")
    end;

    local bazi = {
        SolarDate = {

        },
        BaziDate = {

        },
    }

    -- 通过立春获取当年的年份
    bazi.BaziDate.Year = self:GetLiChun(nYear, nMonth, nDay, nHour, nMinute, nSecond)

end;


-- 获取某个日期的立春, 并且返回八字年
function TBazi:GetLiChun(nYear, nMonth, nDay, nHour, nMinute, nSecond)
    if (nYear < 1900) or (nYear > 2100) then
        error("非法年份");
        return 0;
    end;

    -- 大于2月份肯定是当年了
    if nMonth > 2 then
        return nYear;
    end;
    print(nYear-1899)
    -- 月份对比
    if nMonth > LI_CHUN_LIST[nYear-1899][1] then
        return nYear;
    elseif nMonth < LI_CHUN_LIST[nYear-1899][1] then
        return nYear - 1;
    end;

    -- 日期对比
    if nDay > LI_CHUN_LIST[nYear-1899][2] then
        return nYear;
    elseif nDay < LI_CHUN_LIST[nYear-1899][2] then
        return nYear - 1;
    end;

    -- 小时对比
    if nHour > LI_CHUN_LIST[nYear-1899][3] then
        return nYear;
    elseif nHour < LI_CHUN_LIST[nYear-1899][3] then
        return nYear - 1;
    end;

    -- 分钟对比
    if nMinute > LI_CHUN_LIST[nYear-1899][4] then
        return nYear;
    elseif nMinute < LI_CHUN_LIST[nYear-1899][4] then
        return nYear - 1;
    end;

    -- 秒钟对比
    if nSecond > LI_CHUN_LIST[nYear-1899][5] then
        return nYear
    end;

    return nYear - 1;
end;

-- 返回公历日期是否合法
function TBazi:GetDateIsValid(nYear, nMonth, nDay)
    -- 没有公元0年
    if nYear == 0 then
        return false
    end

    -- 1月开始
    if nMonth < 1 then
        return false
    end

    -- 12月结束
    if nMonth > 12 then
        return false
    end

    -- 1号开始
    if nDay < 1 then
        return false
    end

    -- 获取每个月有多少天
    if nDay > self:GetMonthDays(nYear, nMonth) then
        return false
    end

    -- 1582 年的特殊情况
    if nYear ~= 1582 then
        return true
    end
    if nMonth ~= 10 then
        return true
    end
    if nDay < 5 then
        return true
    end
    if nDay > 14 then
        return true
    end
    return false
end

-- 取本月天数，不考虑 1582 年 10 月的特殊情况
function TBazi:GetMonthDays(nYear, nMonth)
    if nMonth == 1 or nMonth == 3 or nMonth == 5 or nMonth == 7 or nMonth  == 8 or nMonth == 10 or nMonth == 12 then
        return 31
    end

    if nMonth == 4 or nMonth == 6 or nMonth == 9 or nMonth == 11 then
        return 30
    end

    if nMonth == 2 then
        if self:GetIsLeapYear(nYear) then
            return 29
        else
            return 28
        end
    end

    return 0
end;

-- 返回某公历是否闰年
function TBazi:GetIsLeapYear(nYear)
    if self:GetCalendarType(nYear, 1, 1) == ctGregorian then
        return (nYear%4 == 0) and ((nYear%100 ~= 0) or (nYear%400 == 0))
    elseif nYear >= 0  then
        return nYear%4 == 0
    else  -- 需要独立判断公元前的原因是没有公元 0 年
        return (nYear-3)%4 == 0
    end;
end;


-- 根据公历日期判断当时历法
function TBazi:GetCalendarType(nYear, nMonth, nDay)
    if not self:GetDateIsValid(nYear, nMonth, nDay) then
        return ctInvalid
    end

    if nYear > 1582 then
        return ctGregorian
    elseif nYear < 1582 then
        return ctJulian
    elseif nMonth < 10 then
        return ctJulian
    elseif (nMonth == 10) and (nDay <= 4) then
        return ctJulian
    elseif (nMonth == 10) and (nDay <= 14) then
        return ctInvalid
    else
        return ctGregorian
    end
    -- 在现在通行的历法记载上，全世界居然有十天没有任何人出生过，也没有任何人死亡过，也没有发生过大大小小值得纪念的人或事。这就是1582年10月5日至10月14日。格里奥，提出了公历历法。这个历法被罗马教皇格里高利十三世采纳了。那么误差的十天怎么办？罗马教皇格里高利十三世下令，把1582年10月4日的后一天改为10月15日，这样误差的十天没有了，历史上也就无影无踪地消失了十天，当然史书上也就没有这十天的记载了。“格里高利公历”一直沿用到今天。
end

TBazi:GetBazi({
    nYear = 1986,
    nMonth = 2,
    nDay = 22,
    nHour = 12
})